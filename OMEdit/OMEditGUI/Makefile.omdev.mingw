ifeq ($(OMBUILDDIR),)
$(error OMBUILDDIR variable is not set.)
endif

.PHONY: install build $(NAME) version

builddir_bin=$(OMBUILDDIR)/bin
builddir_share=$(OMBUILDDIR)/share/
resourcedir=./Resources/nls/
SHREXT=.dll
GIT_SHA = $(shell git describe --match "v*.*" --always)

NAME=OMEdit
EXE=.exe
QMAKE=qmake

install: build Resources/nls/qm.stamp
	mkdir -p $(builddir_share)/omedit/nls/
	cp -p $(resourcedir)/*.qm $(builddir_share)/omedit/nls/
	cp -p ../bin/$(NAME)$(EXE) $(builddir_bin)

Resources/nls/qm.stamp: OMEditGUI.pro Resources/nls/*.ts
	lrelease $<
	@touch $@

$(NAME): Makefile
	$(MAKE) -f Makefile

clean: MakefileClean
	$(MAKE) -C Debugger/Parser -f Makefile.lib.omdev.mingw clean
	test ! -f Makefile || $(MAKE) -f Makefile clean
	rm -rf ../bin/$(NAME)$(EXE) ../generatedfiles Makefile Makefile.Debug Makefile.Release object_script.*

parsergen:
	$(MAKE) -C Debugger/Parser -f Makefile.lib.omdev.mingw

build: version $(NAME)
	$(MAKE) -f Makefile
Makefile: parsergen OMEditGUI.pro
	$(QMAKE) "CONFIG+=release"
MakefileClean: OMEditGUI.pro
	$(QMAKE) "CONFIG+=release"

version:
	@echo Current version: $(GIT_SHA)
ifeq ($(GIT_SHA),)
	@if test -f version.h; \
	then echo Could not retrieve version number. version.h not updated; \
	else echo "" > version.h; echo Could not retrieve version number. empty version.h was created; \
	fi;
else # version is not empty, update it if it changed
	@if test -f version.h; \
	then \
		echo "#define GIT_SHA \"OMEdit $(GIT_SHA)\"" > version.h.tmp; diff version.h version.h.tmp > /dev/null; \
		if [ $$? -eq 0 ]; then echo No change in version; rm version.h.tmp; \
		else echo version has changed. updating version.h; \mv version.h.tmp version.h; \
		fi; \
	else \
		echo "#define GIT_SHA \"OMEdit $(GIT_SHA)\"" > version.h; echo Retrieved version number. version.h was created; \
	fi;
endif
